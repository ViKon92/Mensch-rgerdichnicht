#BlueJ class context
comment0.target=Routenplaner
comment0.text=\r\n\ Der\ Routenplaner\ erzeugt\ zu\ jeder\ Farbe\ eine\ Liste\ von\ Koordinaten,\ welche\ die\ Reihenfolge\ der\ abzulaufenden\ Felder\ beschreibt\r\n\ \r\n\ @author\ Mirko\ Feldmann\r\n
comment1.params=spielfeld\ felderPerArt
comment1.target=Routenplaner(java.util.ArrayList,\ java.util.HashMap)
comment1.text=\r\n\ Konstruktor,\ welcher\ zu\ einem\ Spielfeld\ die\ Route\ pro\ Farbe\ berechnet\ \r\n\ \r\n\ \ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ \ @param\ Die\ Auflistung\ der\ Felder\ nach\ Klasse\r\n
comment10.params=felderPerArt
comment10.target=int\ getAnzahlSchritte(java.util.HashMap)
comment10.text=\r\n\ Ermittelt\ die\ Anzahl\ der\ Felder,\ welche\ durchlaufen\ werden\ m\u00FCssen\ um\ ins\ Haus\ zu\ d\u00FCrfen\r\n\ \r\n\ @param\ HashMap\ "felderPerArt",\ welche\ eine\ Auflistung\ der\ Felder\ nach\ Klasse\ beinhaltet\r\n
comment2.params=farbe
comment2.target=java.util.ArrayList\ getRouten(Farbe)
comment2.text=\r\n\ Getter\ f\u00FCr\ die\ ermittelte\ Route\r\n\ \r\n\ @param\ Die\ Farbe\ f\u00FCr\ welche\ die\ Route\ geholt\ werden\ soll\r\n
comment3.params=spielfeld\ felderPerArt
comment3.target=void\ routenPlanen(java.util.ArrayList,\ java.util.HashMap)
comment3.text=\r\n\ Startet\ die\ Ermittlung\ der\ Routen\ f\u00FCr\ alle\ vorhandenen\ Farben\r\n\r\n\ \ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ \ @param\ Die\ Auflistung\ der\ Felder\ nach\ Klasse\r\n
comment4.params=spielfeld\ startfeld\ zielfeld
comment4.target=java.util.ArrayList\ routeErmitteln(java.util.ArrayList,\ Feld,\ Feld)
comment4.text=\r\n\ Beginnt\ die\ rekursive\ Ermitllung\ der\ Route\r\n\ \r\n\ \ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ \ @param\ Das\ Startfeld\ der\ Route\r\n\ \ @param\ Das\ Zeilfeld\ der\ Route\r\n
comment5.params=spielfeld\ route\ startpunkt\ startfarbe\ endpunkt
comment5.target=boolean\ routeFinden(java.util.ArrayList,\ java.util.ArrayList,\ java.awt.Point,\ Farbe,\ java.awt.Point)
comment5.text=\r\n\ Rekursive\ Ermittlung\ der\ Route\r\n\ \r\n\ \ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ \ @param\ Die\ ermittelte\ Route\r\n\ \ @param\ Die\ aktuellen\ Koordinaten\r\n\ \ @param\ Die\ Farbe\ f\u00FCr\ welche\ die\ Route\ ermittelt\ wird\r\n\ \ @param\ Die\ Zielkoordniaten\ der\ Route\r\n
comment6.params=spielfeld\ route\ zuBetretenePosition\ erlaubteFarbe
comment6.target=boolean\ feldBetretbar(java.util.ArrayList,\ java.util.ArrayList,\ java.awt.Point,\ Farbe)
comment6.text=\r\n\ Pr\u00FCft\ ob\ ein\ Feld\ an\ einer\ Position\ betreten\ werden\ darf\r\n\ \r\n\ Das\ Regelwerk\ erfolgt\ in\ folgenden\ Schritten\:\r\n\ \ 1.\ Das\ Feld\ muss\ Figuren\ dieser\ Farbe\ erlauben\r\n\ \ 2.\ Das\ Feld\ muss\ das\ erste\ Mal\ betreten\ werden\r\n\ \ 3.\ H\u00E4user\ d\u00FCrfen\ erst\ nachdem\ alle\ anderen\ Felder\ besucht\ worden\ sind\ betreten\ werden\r\n\ \ opt.\ 4.\ Der\ Eintritt\ ins\ Haus\ muss\ von\ dem\ letzten\ Lauffeld\ erfolgen\r\n\ \ \r\n\ \ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ \ @param\ Die\ ermittelte\ Route\r\n\ \ @param\ Die\ Koordinaten\ des\ Feldes,\ welches\ betreten\ werden\ soll\r\n\ \ @param\ Die\ Farbe,\ welche\ versucht\ das\ Feld\ zu\ betreten\r\n
comment7.params=felderPerArt\ farbe
comment7.target=Feld\ findeStartfeld(java.util.HashMap,\ Farbe)
comment7.text=\r\n\ Ermittelt\ zu\ einer\ Farbe\ das\ Startfeld\r\n\ \!\!\!\ Nur\ das\ erste\ Startfeld\ wird\ ber\u00FCcksichtigt\ \!\!\!\r\n\ \r\n\ @param\ HashMap\ "felderPerArt",\ welche\ eine\ Auflistung\ der\ Felder\ nach\ Klasse\ beinhaltet\r\n\ @param\ Die\ Farbe\ f\u00FCr\ der\ das\ Startfeld\ ermittelt\ werden\ soll\r\n
comment8.params=felderPerArt\ farbe
comment8.target=Feld\ findeZielfeld(java.util.HashMap,\ Farbe)
comment8.text=\r\n\ Ermittelt\ zu\ einer\ Farbe\ das\ letzte\ Haus\r\n\ \r\n\ @param\ HashMap\ "felderPerArt",\ welche\ eine\ Auflistung\ der\ Felder\ nach\ Klasse\ beinhaltet\r\n\ @param\ Die\ Farbe\ f\u00FCr\ der\ das\ Zielhaus\ ermittelt\ werden\ soll\r\n
comment9.params=spielfeld\ letztesFeld
comment9.target=Feld\ getAktuellesFeld(java.util.ArrayList,\ java.awt.Point)
comment9.text=\r\n\ Ermittelt\ das\ Feld\ zu\ einer\ bestimmten\ Koordinate\ \r\n\ \r\n\ @param\ Das\ Spielfeld\ als\ 2D-ArrayList\r\n\ @param\ Die\ Koordinate\ des\ Feldes\r\n
numComments=11
